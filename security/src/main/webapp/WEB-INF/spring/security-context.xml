<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
		인증 : 현재 사용자가 누구인지 확인하는 과정
				-> 주로 아이디/암호를 이용해서 인증을 처리(=폼 로그인 방식)
	 -->
	 
	 <bean id="customLoginSuccessHandler" class="com.spring.handler.CustomLoginSuccessHandler"></bean>
	 <bean id="customAccessDeniedHandler" class="com.spring.handler.CustomAccessDeniedHandler"></bean>
	 
	 <security:http>
	 <!-- 유저 인증방식: form-login(폼 로그인) 인증 방식을 선택
	 		authentication-failure-url : 로그인 정보가 틀렸을 때 컨트롤러 경로
	 		authentication-success-handler-ref : 로그인 성공한 이후 처리(ref = 객체 사용(=bean 생성 필요(맨위)))
	  -->
	 	<security:form-login login-page="/security/login" authentication-failure-url="/security/login-error" 
	 			authentication-success-handler-ref="customLoginSuccessHandler"/>
	 			
	 	<!-- 403페이지 대신 커스텀 접근 제한 페이지
	 			error-page : 컨트롤러 경로	
	 			ex) <security:access-denied-handler error-page="/security/access-denied"/>
	 			ref : = customAccessDeniedHandler
	 	 -->
	 	 <security:access-denied-handler ref="customAccessDeniedHandler"/>
	 			
	 			
	 	<!--l ogout post 시 해야 하는 작업 -->
	 	<security:logout invalidate-session="true" delete-cookies="remember-me,JSESSION_ID"/>
	 	
	 	<!-- 특정 경로 요청 시 적절한 권한 여부를 확인 후 맞는 경로로 이동/에러 페이지 보여줌 -->
<!-- 	 	<security:intercept-url pattern="/security/userpage" access="hasRole('ROLE_USER')"/>
	 	<security:intercept-url pattern="/security/adminpage" access="hasRole('ROLE_ADMIN')"/> -->
	 </security:http>
	 
	 <!-- 비번은 무조건 암호화 상태여야 함 : {noop} => 암호화 하지 말기
	 		authorities="ROLE_" : 권한 부여
	  -->
	 <security:authentication-manager>
	 	<security:authentication-provider>
	 		<security:user-service>
	 			<security:user name="user1" password="{noop}user1" authorities="ROLE_USER"/>
	 			<security:user name="admin" password="{noop}admin" authorities="ROLE_USER,ROLE_ADMIN"/>
	 		</security:user-service>
	 	</security:authentication-provider>
	 </security:authentication-manager>
</beans>
